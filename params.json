{"name":"Sgmendez/Json","tagline":"A PHP library for manipulate JSON data","body":"[![License](https://poser.pugx.org/sgmendez/json/license.svg)](https://packagist.org/packages/sgmendez/json)\r\n[![SensioLabsInsight](https://insight.sensiolabs.com/projects/f3e4c839-49ea-4065-8370-0e98758a7062/mini.png)](https://insight.sensiolabs.com/projects/f3e4c839-49ea-4065-8370-0e98758a7062)\r\n[![Latest Stable Version](https://poser.pugx.org/sgmendez/json/v/stable.svg)](https://packagist.org/packages/sgmendez/json) \r\n[![Total Downloads](https://poser.pugx.org/sgmendez/json/downloads.svg)](https://packagist.org/packages/sgmendez/json) \r\n[![Latest Unstable Version](https://poser.pugx.org/sgmendez/json/v/unstable.svg)](https://packagist.org/packages/sgmendez/json) \r\n\r\n# Introduction\r\n--------------\r\n\r\nThis PHP library create a wrapper for `json_encode` and `json_decode` PHP functions\r\nthat normalize use across de PHP versions and throw exceptions when encoding or\r\ndecoding fail.\r\n\r\n# Requirements\r\n--------------\r\n\r\nThis library require PHP 5.3.3 or higher\r\n\r\n# Installation\r\n--------------\r\n\r\nYou can use [Composer](https://getcomposer.org) to use this library in \r\nyour application.\r\n\r\nIf you don't have Composer yet, download it following the instructions on\r\nhttp://getcomposer.org/ or just run the following command:\r\n\r\n```\r\ncurl -s http://getcomposer.org/installer | php\r\n```\r\nAnd then execute this command to add libary to your project:\r\n\r\n```\r\n$ composer require sgmendez/json\r\n```\r\nOr require [`sgmendez/json`](http://sgmendez.github.io/json/)\r\ninto your `composer.json` file:\r\n\r\n\r\n``` \r\njson\r\n{\r\n    \"require\": {\r\n        \"sgmendez/json\": \"1.0.*\"\r\n    }\r\n}\r\n```\r\n\r\n# Tests\r\n-------\r\nYou can run the PHPUnit tests, in directory test execute:\r\n\r\n    $ php phpunit.phar .\r\n\r\nIn this directory there are a copy of phpunit.phar for execution test\r\n\r\n# Examples\r\n----------\r\n\r\nEncode JSON data:\r\n\r\n```\r\nphp\r\nuse Sgmendez\\Json\\Json;\r\n\r\n$json = new Json();\r\n\r\ntry\r\n{\r\n    $arrayData = array('foo' => 'Foo', 'bar' => 'Bar');\r\n    $jsonData = $json->encode($arrayData);\r\n} \r\ncatch (Exception $ex) \r\n{\r\n    echo '[EXCEPTION] MSG: '.$ex->getMessage().' | FILE: '.$ex->getFile().': '.$ex->getLine().\"\\n\";\r\n}\r\n\r\n```\r\n\r\nDecode JSON string (by default, return array data):\r\n\r\n```\r\nphp\r\nuse Sgmendez\\Json\\Json;\r\n\r\n$json = new Json();\r\n\r\ntry\r\n{\r\n    $jsonData = '{\"foo\":\"Foo\",\"bar\":\"Bar\"}';\r\n    $dataArray = $json->decode($jsonData);\r\n} \r\ncatch (Exception $ex) \r\n{\r\n    echo '[EXCEPTION] MSG: '.$ex->getMessage() .\r\n         ' | FILE: '.$ex->getFile().': '.$ex->getLine().\"\\n\";\r\n}\r\n\r\n\r\n```\r\n\r\nDecode JSON file (by default, return array data):\r\n\r\n```\r\nphp\r\nuse Sgmendez\\Json\\Json;\r\n\r\n$json = new Json();\r\n\r\ntry\r\n{\r\n    $dataArray = $json->decodeFile('/path/to/file.json');\r\n} \r\ncatch (Exception $ex) \r\n{\r\n    echo '[EXCEPTION] MSG: '.$ex->getMessage() .\r\n         ' | FILE: '.$ex->getFile().': '.$ex->getLine().\"\\n\";\r\n}\r\n\r\n```\r\nIf you need to check if is valid json data, you can to use `checkValidJsonData()` method.\r\n\r\n\r\n# License\r\n---------\r\nLicensed under the BSD License:\r\n\r\n   http://opensource.org/licenses/bsd-license.php\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}